# -*- coding:utf-8-*-
#+TITLE: 涉及技术
#+AUTHOR: phenix3443
#+EMAIL: phenix3443+github@gmail.com

* operesty
  使用 openresty 作为底层开发框架，ngx_lua_module 提供的丰富的库便于开发。

* lua
  使用 lua 作为开发语言。

* luarocks
  使用 luarocks 安装相关的依赖库。
   + penlight

     使用 penlight 库中的 class 提供面向对象的支持，tablex 封装了很多有用表操作，还要其他一些有用的库。

   + lua-cjson

     json 处理工具，多用于解析请求和封装响应，以及日志序列化。

   + version

     作为接口协议版本号的比较。

   + luaunit

     lua 代码单元测试。

   + lua-resty-http

     访问外部的 http 服务。

   + luadoc

     生成 lua 代码文档。

* python3
  用于编写测试脚本，任务脚本.

* pipenv
  使用 pipenv 创建干净的 python 脚本执行环境，安装第三方库。
   + requests

     发送 http 请求。

   + concurrentloghandler

     多进程日志记录工具。

   + redis

   + mysql-connector

   + logging

     python 标准日志库。

   + unittest

     python 标准测试框架。

* cmake
  使用 cmake 打包部署程序。

* docker（todo）
  使用 docker 容器化服务。
